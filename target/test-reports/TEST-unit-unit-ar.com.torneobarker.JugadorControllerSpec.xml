<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="7" failures="0" hostname="BA27802ARL" name="ar.com.torneobarker.JugadorControllerSpec" tests="7" time="0.443" timestamp="2016-03-07T19:14:45">
  <properties />
  <testcase classname="ar.com.torneobarker.JugadorControllerSpec" name="Test the index action returns the correct model" time="0.307">
    <error message="Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!" type="org.codehaus.groovy.grails.exceptions.GrailsConfigurationException">org.codehaus.groovy.grails.exceptions.GrailsConfigurationException: Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!
	at grails.test.mixin.domain.DomainClassUnitTestMixin.registerGrailsDomainClass(DomainClassUnitTestMixin.groovy:167)
	at grails.test.mixin.domain.DomainClassUnitTestMixin.mockDomains(DomainClassUnitTestMixin.groovy:83)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.builtin.JUnitFixtureMethodsExtension$FixtureType$FixtureMethodInterceptor.intercept(JUnitFixtureMethodsExtension.java:145)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$1$2.evaluate(TestRuntimeJunitAdapter.groovy:49)
	at org.spockframework.runtime.extension.builtin.TestRuleInterceptor.intercept(TestRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$3$4.evaluate(TestRuntimeJunitAdapter.groovy:76)
	at org.spockframework.runtime.extension.builtin.ClassRuleInterceptor.intercept(ClassRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
</error>
  </testcase>
  <testcase classname="ar.com.torneobarker.JugadorControllerSpec" name="Test the create action returns the correct model" time="0.026">
    <error message="Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!" type="org.codehaus.groovy.grails.exceptions.GrailsConfigurationException">org.codehaus.groovy.grails.exceptions.GrailsConfigurationException: Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!
	at grails.test.mixin.domain.DomainClassUnitTestMixin.registerGrailsDomainClass(DomainClassUnitTestMixin.groovy:167)
	at grails.test.mixin.domain.DomainClassUnitTestMixin.mockDomains(DomainClassUnitTestMixin.groovy:83)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.builtin.JUnitFixtureMethodsExtension$FixtureType$FixtureMethodInterceptor.intercept(JUnitFixtureMethodsExtension.java:145)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$1$2.evaluate(TestRuntimeJunitAdapter.groovy:49)
	at org.spockframework.runtime.extension.builtin.TestRuleInterceptor.intercept(TestRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$3$4.evaluate(TestRuntimeJunitAdapter.groovy:76)
	at org.spockframework.runtime.extension.builtin.ClassRuleInterceptor.intercept(ClassRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
</error>
  </testcase>
  <testcase classname="ar.com.torneobarker.JugadorControllerSpec" name="Test the save action correctly persists an instance" time="0.019">
    <error message="Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!" type="org.codehaus.groovy.grails.exceptions.GrailsConfigurationException">org.codehaus.groovy.grails.exceptions.GrailsConfigurationException: Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!
	at grails.test.mixin.domain.DomainClassUnitTestMixin.registerGrailsDomainClass(DomainClassUnitTestMixin.groovy:167)
	at grails.test.mixin.domain.DomainClassUnitTestMixin.mockDomains(DomainClassUnitTestMixin.groovy:83)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.builtin.JUnitFixtureMethodsExtension$FixtureType$FixtureMethodInterceptor.intercept(JUnitFixtureMethodsExtension.java:145)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$1$2.evaluate(TestRuntimeJunitAdapter.groovy:49)
	at org.spockframework.runtime.extension.builtin.TestRuleInterceptor.intercept(TestRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$3$4.evaluate(TestRuntimeJunitAdapter.groovy:76)
	at org.spockframework.runtime.extension.builtin.ClassRuleInterceptor.intercept(ClassRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
</error>
  </testcase>
  <testcase classname="ar.com.torneobarker.JugadorControllerSpec" name="Test that the show action returns the correct model" time="0.019">
    <error message="Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!" type="org.codehaus.groovy.grails.exceptions.GrailsConfigurationException">org.codehaus.groovy.grails.exceptions.GrailsConfigurationException: Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!
	at grails.test.mixin.domain.DomainClassUnitTestMixin.registerGrailsDomainClass(DomainClassUnitTestMixin.groovy:167)
	at grails.test.mixin.domain.DomainClassUnitTestMixin.mockDomains(DomainClassUnitTestMixin.groovy:83)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.builtin.JUnitFixtureMethodsExtension$FixtureType$FixtureMethodInterceptor.intercept(JUnitFixtureMethodsExtension.java:145)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$1$2.evaluate(TestRuntimeJunitAdapter.groovy:49)
	at org.spockframework.runtime.extension.builtin.TestRuleInterceptor.intercept(TestRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$3$4.evaluate(TestRuntimeJunitAdapter.groovy:76)
	at org.spockframework.runtime.extension.builtin.ClassRuleInterceptor.intercept(ClassRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
</error>
  </testcase>
  <testcase classname="ar.com.torneobarker.JugadorControllerSpec" name="Test that the edit action returns the correct model" time="0.018">
    <error message="Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!" type="org.codehaus.groovy.grails.exceptions.GrailsConfigurationException">org.codehaus.groovy.grails.exceptions.GrailsConfigurationException: Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!
	at grails.test.mixin.domain.DomainClassUnitTestMixin.registerGrailsDomainClass(DomainClassUnitTestMixin.groovy:167)
	at grails.test.mixin.domain.DomainClassUnitTestMixin.mockDomains(DomainClassUnitTestMixin.groovy:83)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.builtin.JUnitFixtureMethodsExtension$FixtureType$FixtureMethodInterceptor.intercept(JUnitFixtureMethodsExtension.java:145)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$1$2.evaluate(TestRuntimeJunitAdapter.groovy:49)
	at org.spockframework.runtime.extension.builtin.TestRuleInterceptor.intercept(TestRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$3$4.evaluate(TestRuntimeJunitAdapter.groovy:76)
	at org.spockframework.runtime.extension.builtin.ClassRuleInterceptor.intercept(ClassRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
</error>
  </testcase>
  <testcase classname="ar.com.torneobarker.JugadorControllerSpec" name="Test the update action performs an update on a valid domain instance" time="0.017">
    <error message="Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!" type="org.codehaus.groovy.grails.exceptions.GrailsConfigurationException">org.codehaus.groovy.grails.exceptions.GrailsConfigurationException: Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!
	at grails.test.mixin.domain.DomainClassUnitTestMixin.registerGrailsDomainClass(DomainClassUnitTestMixin.groovy:167)
	at grails.test.mixin.domain.DomainClassUnitTestMixin.mockDomains(DomainClassUnitTestMixin.groovy:83)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.builtin.JUnitFixtureMethodsExtension$FixtureType$FixtureMethodInterceptor.intercept(JUnitFixtureMethodsExtension.java:145)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$1$2.evaluate(TestRuntimeJunitAdapter.groovy:49)
	at org.spockframework.runtime.extension.builtin.TestRuleInterceptor.intercept(TestRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$3$4.evaluate(TestRuntimeJunitAdapter.groovy:76)
	at org.spockframework.runtime.extension.builtin.ClassRuleInterceptor.intercept(ClassRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
</error>
  </testcase>
  <testcase classname="ar.com.torneobarker.JugadorControllerSpec" name="Test that the delete action deletes an instance if it exists" time="0.018">
    <error message="Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!" type="org.codehaus.groovy.grails.exceptions.GrailsConfigurationException">org.codehaus.groovy.grails.exceptions.GrailsConfigurationException: Cannot add Domain class [class ar.com.torneobarker.Jugador]. It is not a Domain!
	at grails.test.mixin.domain.DomainClassUnitTestMixin.registerGrailsDomainClass(DomainClassUnitTestMixin.groovy:167)
	at grails.test.mixin.domain.DomainClassUnitTestMixin.mockDomains(DomainClassUnitTestMixin.groovy:83)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.builtin.JUnitFixtureMethodsExtension$FixtureType$FixtureMethodInterceptor.intercept(JUnitFixtureMethodsExtension.java:145)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$1$2.evaluate(TestRuntimeJunitAdapter.groovy:49)
	at org.spockframework.runtime.extension.builtin.TestRuleInterceptor.intercept(TestRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)
	at org.spockframework.runtime.extension.MethodInvocation.invokeTargetMethod(MethodInvocation.java:91)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:85)
	at org.spockframework.runtime.extension.builtin.AbstractRuleInterceptor$1.evaluate(AbstractRuleInterceptor.java:37)
	at grails.test.runtime.TestRuntimeJunitAdapter$3$4.evaluate(TestRuntimeJunitAdapter.groovy:76)
	at org.spockframework.runtime.extension.builtin.ClassRuleInterceptor.intercept(ClassRuleInterceptor.java:38)
	at org.spockframework.runtime.extension.MethodInvocation.proceed(MethodInvocation.java:84)
</error>
  </testcase>
  <system-out><![CDATA[--Output from Test the index action returns the correct model--
--Output from Test the create action returns the correct model--
--Output from Test the save action correctly persists an instance--
--Output from Test that the show action returns the correct model--
--Output from Test that the edit action returns the correct model--
--Output from Test the update action performs an update on a valid domain instance--
--Output from Test that the delete action deletes an instance if it exists--
]]></system-out>
  <system-err><![CDATA[--Output from Test the index action returns the correct model--
--Output from Test the create action returns the correct model--
--Output from Test the save action correctly persists an instance--
--Output from Test that the show action returns the correct model--
--Output from Test that the edit action returns the correct model--
--Output from Test the update action performs an update on a valid domain instance--
--Output from Test that the delete action deletes an instance if it exists--
]]></system-err>
</testsuite>
